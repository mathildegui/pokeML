name: Create Release and upload artifacts
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [ main ]

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Specify branch from where you are sharing build
          ref: 'main'
      - name: Setup release information
        #get version name from app_versions.gradle file (5.6.2)
        run: |
          versionName=`sed '15q;d' app/build.gradle | cut -d "=" -f2 | xargs`
          echo `sed 's/^versionName " \(.*\) "$/\1/' $versionName | cut -d "=" -f2 | xargs`
          export VERSION_NAME=$versionName
          TEST_NAME=$versionName
          echo "VERSION_NAME=$TEST_NAME" >> $GITHUB_ENV
        env:
          LAST_NAME: $VERSION_NAME
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          VERSION_NAME: ${{ env.VERSION_NAME }}
        with:
          tag_name: ${{ env.VERSION_NAME }}
          release_name: Release ${{ env.VERSION_NAME }}
          body: |
            Changes in this Release
          draft: false
          prerelease: false
      - name: Settting up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Runing build command
        # Run your own gradle command to generate build.
        run: ./gradlew assembleRelease --stacktrace
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          #asset_name: app-debug-${{ github.event.debug.tag_name }}.apk #FIXME Empty tag_name
          asset_name: app-debug.apk
          asset_content_type: application/zip
          #FIXME use this after https://github.com/r0adkll/sign-android-release