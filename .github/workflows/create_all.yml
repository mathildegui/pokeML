name: Create Release and upload artifacts
on:
  push:
    branches:
      # Specify branch from where you are sharing build
      - 'main'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Specify branch from where you are sharing build
          ref: 'main'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name: Settting up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Runing build command
        # Run your own gradle command to generate build.
        run: ./gradlew assembleDebug
      - name: Uploading build
        uses: actions/upload-artifact@v2
        with:
          name: app-debug-v1.0.0
          path: app/build/outputs/apk/debug/app-debug.apk
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./app-debug-v1.0.0.zip
          asset_name: app-debug-v1.0.0.zip
          asset_content_type: application/zip

#
#jobs:
#  build:
#    name: Building app
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checking out branch
#        uses: actions/checkout@v2
#          with:
#            # Specify branch from where you are sharing build
#            ref: '[branch_name]'
#      - name: Settting up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Runing build command
#        # Run your own gradle command to generate build.
#        run: ./gradlew bundleRelease
#      - name: Uploading build
#        uses: actions/upload-artifact@v2
#        with:
#          name: bundle
#          path: app/build/outputs/bundle/release/app-release.aab